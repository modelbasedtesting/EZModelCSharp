digraph state_machine {
size = "13,7.5";
node [shape = ellipse];
rankdir=LR;
"Running.False, HasTodos.True, HasActiveTodos.True"	[label="Running.False\n HasTodos.True\n HasActiveTodos.True" ]
"Running.True, HasTodos.True, HasActiveTodos.True"	[label="Running.True\n HasTodos.True\n HasActiveTodos.True" ]
"Running.True, HasTodos.False, HasActiveTodos.False"	[label="Running.True\n HasTodos.False\n HasActiveTodos.False" ]
"Running.True, HasTodos.True, HasActiveTodos.False"	[label="Running.True\n HasTodos.True\n HasActiveTodos.False" ]
"Running.False, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="java -jar apichallenges.jar",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.False, HasTodos.True, HasActiveTodos.True" [ label="Shutdown",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="AddActiveTodo",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="AddResolvedTodo",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="DeleteLessThanAllTodos",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.False, HasActiveTodos.False" [ label="DeleteAllTodos",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="ResolveLessThanAllActiveTodos",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.True, HasActiveTodos.False" [ label="ResolveAllActiveTodos",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.True" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="ActivateAnyResolvedTodos",color=black, penwidth=1 ];
"Running.True, HasTodos.False, HasActiveTodos.False" -> "Running.False, HasTodos.True, HasActiveTodos.True" [ label="Shutdown",color=black, penwidth=1 ];
"Running.True, HasTodos.False, HasActiveTodos.False" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="AddActiveTodo",color=black, penwidth=1 ];
"Running.True, HasTodos.False, HasActiveTodos.False" -> "Running.True, HasTodos.True, HasActiveTodos.False" [ label="AddResolvedTodo",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.False" -> "Running.False, HasTodos.True, HasActiveTodos.True" [ label="Shutdown",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.False" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="AddActiveTodo",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.False" -> "Running.True, HasTodos.True, HasActiveTodos.False" [ label="AddResolvedTodo",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.False" -> "Running.True, HasTodos.True, HasActiveTodos.False" [ label="DeleteLessThanAllTodos",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.False" -> "Running.True, HasTodos.False, HasActiveTodos.False" [ label="DeleteAllTodos",color=black, penwidth=1 ];
"Running.True, HasTodos.True, HasActiveTodos.False" -> "Running.True, HasTodos.True, HasActiveTodos.True" [ label="ActivateAnyResolvedTodos",color=black, penwidth=1 ];
}
